@page "/home"

@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids
@using Fitness.Data
@using Syncfusion.Blazor;
@inject Fitness.IService.IClientService clientService
@inject Fitness.IService.IClientSpecialService clientSpecialService


<h3>
    Search clients...
</h3>

<div class="col-md-12">
    <SfGrid DataSource="@Clients" AllowFiltering="true">
        <GridFilterSettings Mode="FilterBarMode.Immediate" ImmediateModeDelay="100">
        </GridFilterSettings>

        <GridColumns>
            @* <GridColumn Field=@nameof(Client.Name) HeaderText="ID"
            FilterSettings="@(new FilterSettings() { Operator = Operator.LessThanOrEqual })">
            </GridColumn>  *@

            <GridColumn Field=@nameof(Client.Name) HeaderText="Name" Width="200px"></GridColumn>
            <GridColumn Field=@nameof(Client.Id) HeaderText="Client Id" Width="200px"></GridColumn>
            <GridColumn Field=@nameof(Client.IdCard) HeaderText="IdCard" Width="200px"></GridColumn>
            <GridColumn Field=@nameof(Client.Address) HeaderText="Address" Width="200px"></GridColumn>
            <GridColumn Field=@nameof(Client.Email) HeaderText="Email" Width="200px"></GridColumn>
            <GridColumn Field=@nameof(Client.PhoneNr) HeaderText="PhoneNr" Width="200px"></GridColumn>
            <GridColumn Field=@nameof(Client.Id)  Width="200px">
                <Template Context="context">
                    <button class="btn btn-primary" @onclick="() => ButtonHandler((Client)context)">Edit</button>
                </Template>
            </GridColumn>

        </GridColumns>
    </SfGrid>
</div>

@*
<div class="col-md-12">
    <SfGrid DataSource="@ClientSpecials" AllowFiltering="true">
        <GridFilterSettings Mode="FilterBarMode.Immediate" ImmediateModeDelay="100" >
        </GridFilterSettings>
 
        <GridColumns >
              

            <GridColumn Field=@nameof(ClientSpecial.Name) HeaderText="Name" Width="200px"></GridColumn>
            <GridColumn Field=@nameof(ClientSpecial.IdCard) HeaderText="IdCard" Width="200px"></GridColumn>
                <GridColumn Field=@nameof(ClientSpecial.Barcode) HeaderText="Barcode" Width="200px"></GridColumn>
                <GridColumn Field=@nameof(ClientSpecial.ClientMemberships) HeaderText="ClientMemberships" Width="200px"></GridColumn>
                <GridColumn Width="200px">
                    <Template>
                        <button class="btn btn-primary" @onclick="() => ButtonHandler()">Edit</button>
                    </Template>
                </GridColumn>
                   
                    
        </GridColumns>
    </SfGrid>
</div>
  *@
<style>

    .e-filterbar input{
        background-color: darkgrey ;
    }
    .e-headercell {
        color: white;
        font-size: 1.5rem;
        font-weight: bold;
    }
    .title{
       margin:8px;
       margin-top:500px;

    }
</style>




@code{

    Client Client = new Client();
    List<Client> Clients = new List<Client>();
    List<ClientSpecial> ClientSpecials = new List<ClientSpecial>();


    [Parameter]
    public string? userId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        GetClients();
       // GetClientSpecial();
    }
    private void GetClients()
    {
        Clients = clientService.GetClients();    
    }

    private void GetClientSpecial()
    {
        ClientSpecials = clientSpecialService.GetClientSpecial();

    }
    private void Save()
    {
        clientService.SaveOrUpdate(Client);
        Reset();
        GetClients();
    }
    private void Reset()
    {
        Client = new Client();

    }
    private void Edit(string clientId)
    {
        Client = clientService.GetClient(clientId);
    }
    private void Delete(string clientId)
    {
        clientService.Delete(clientId);
        GetClients();
    }
       
    
    @inject NavigationManager navigationManager
    private void ButtonHandler(Client client)
    {
        string ClientId = client.Id;
        Console.WriteLine(ClientId);
        navigationManager
             .NavigateTo($"/clientdetails/{ClientId}");
    }
    
    

}
